Terminals which are not used

   WHILE
   DO
   CONST


Grammar

    0 $accept: translation_unit $end

    1 M: /* empty */

    2 N: /* empty */

    3 changetable: /* empty */

    4 primary_expression: IDENTIFIER
    5                   | INTEGER_CONSTANT
    6                   | CHARACTER_CONSTANT
    7                   | FLOAT_CONSTANT
    8                   | STRING_LITERAL
    9                   | ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE

   10 postfix_expression: primary_expression
   11                   | postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
   12                   | postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
   13                   | postfix_expression ARROW IDENTIFIER

   14 argument_expression_list_opt: argument_expression_list
   15                             | /* empty */

   16 argument_expression_list: assignment_expression
   17                         | argument_expression_list COMMA assignment_expression

   18 unary_expression: postfix_expression
   19                 | unary_operator unary_expression

   20 unary_operator: BITWISE_AND
   21               | MUL
   22               | ADD
   23               | SUB
   24               | EXCLAIM

   25 multiplicative_expression: unary_expression
   26                          | multiplicative_expression MUL unary_expression
   27                          | multiplicative_expression DIV unary_expression
   28                          | multiplicative_expression MOD unary_expression

   29 additive_expression: multiplicative_expression
   30                    | additive_expression ADD multiplicative_expression
   31                    | additive_expression SUB multiplicative_expression

   32 shift_expression: additive_expression
   33                 | shift_expression BIT_SL additive_expression
   34                 | shift_expression BIT_SR additive_expression

   35 and_expression: shift_expression
   36               | and_expression BITWISE_AND shift_expression

   37 exclusive_or_expression: and_expression
   38                        | exclusive_or_expression BITWISE_XOR and_expression

   39 inclusive_or_expression: exclusive_or_expression
   40                        | inclusive_or_expression BITWISE_OR exclusive_or_expression

   41 relational_expression: inclusive_or_expression
   42                      | relational_expression LT inclusive_or_expression
   43                      | relational_expression GT inclusive_or_expression
   44                      | relational_expression LTE inclusive_or_expression
   45                      | relational_expression GTE inclusive_or_expression

   46 equality_expression: relational_expression
   47                    | equality_expression EQ M relational_expression
   48                    | equality_expression NEQ M relational_expression

   49 and_helper: logical_and_expression AND

   50 logical_and_expression: equality_expression
   51                       | and_helper M equality_expression

   52 or_helper: logical_or_expression OR

   53 logical_or_expression: logical_and_expression
   54                      | or_helper M logical_and_expression

   55 condition: logical_or_expression QUESTION

   56 conditional_expression: logical_or_expression
   57                       | condition M expression N COLON M conditional_expression

   58 assignment_expression: conditional_expression
   59                      | unary_expression ASSIGN assignment_expression

   60 expression: assignment_expression

   61 declaration: type_specifier init_declarator_list SEMICOLON

   62 init_declarator_list: init_declarator
   63                     | init_declarator_list COMMA init_declarator

   64 init_declarator: declarator
   65                | declarator ASSIGN initializer

   66 type_specifier: VOID
   67               | CHAR
   68               | INTEGER
   69               | FLOAT
   70               | BOOL

   71 declarator: pointer direct_declarator
   72           | direct_declarator

   73 declarator_helper: IDENTIFIER ROUND_BRACKET_OPEN

   74 direct_declarator: IDENTIFIER
   75                  | IDENTIFIER SQUARE_BRACKET_OPEN INTEGER_CONSTANT SQUARE_BRACKET_CLOSE
   76                  | declarator_helper changetable parameter_list_opt ROUND_BRACKET_CLOSE

   77 pointer: MUL

   78 parameter_list_opt: parameter_list
   79                   | /* empty */

   80 parameter_list: parameter_declaration
   81               | parameter_list COMMA parameter_declaration

   82 parameter_declaration: type_specifier declarator

   83 initializer: assignment_expression

   84 statement: compound_statement
   85          | expression_statement
   86          | selection_statement
   87          | iteration_statement
   88          | jump_statement

   89 compound_statement: BEGIN_TOK block_item_list_opt END

   90 block_item_list_opt: /* empty */
   91                    | block_item_list

   92 block_item_list: block_item
   93                | block_item_list M block_item

   94 block_item: declaration
   95           | statement

   96 expression_statement: expression SEMICOLON
   97                     | SEMICOLON

   98 if_helper: IF ROUND_BRACKET_OPEN expression

   99 selection_statement: if_helper ROUND_BRACKET_CLOSE M statement
  100                    | if_helper ROUND_BRACKET_CLOSE M statement ELSE M statement

  101 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

  102 jump_statement: RETURN expression SEMICOLON
  103               | RETURN SEMICOLON

  104 translation_unit: external_declaration
  105                 | translation_unit external_declaration

  106 external_declaration: function_definition
  107                     | declaration

  108 function_definition: type_specifier declarator changetable BEGIN_TOK block_item_list_opt END


Terminals, with rules where they appear

$end (0) 0
error (256)
WHILE (258)
DO (259)
CONST (260)
CHAR (261) 67
ELSE (262) 100
FOR (263) 101
FLOAT (264) 69
IF (265) 98
INTEGER (266) 68
RETURN (267) 102 103
VOID (268) 66
BOOL (269) 70
IDENTIFIER (270) 4 13 73 74 75
STRING_LITERAL (271) 8
SQUARE_BRACKET_OPEN (272) 11 75
SQUARE_BRACKET_CLOSE (273) 11 75
ROUND_BRACKET_OPEN (274) 9 12 73 98 101
ROUND_BRACKET_CLOSE (275) 9 12 76 99 100 101
BEGIN_TOK (276) 89 108
END (277) 89 108
BITWISE_AND (278) 20 36
MUL (279) 21 26 77
ADD (280) 22 30
SUB (281) 23 31
EXCLAIM (282) 24
DIV (283) 27
MOD (284) 28
BIT_SL (285) 33
BIT_SR (286) 34
ARROW (287) 13
BITWISE_XOR (288) 38
BITWISE_OR (289) 40
LTE (290) 44
GTE (291) 45
EQ (292) 47
NEQ (293) 48
AND (294) 49
OR (295) 52
LT (296) 42
GT (297) 43
QUESTION (298) 55
COLON (299) 57
SEMICOLON (300) 61 96 97 102 103
ASSIGN (301) 59 65
COMMA (302) 17 63 81
THEN (303)
FLOAT_CONSTANT (304) 7
INTEGER_CONSTANT (305) 5 75
CHARACTER_CONSTANT (306) 6


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
M (53)
    on left: 1, on right: 47 48 51 54 57 93 99 100 101
N (54)
    on left: 2, on right: 57 101
changetable (55)
    on left: 3, on right: 76 108
primary_expression (56)
    on left: 4 5 6 7 8 9, on right: 10
postfix_expression (57)
    on left: 10 11 12 13, on right: 11 12 13 18
argument_expression_list_opt (58)
    on left: 14 15, on right: 12
argument_expression_list (59)
    on left: 16 17, on right: 14 17
unary_expression (60)
    on left: 18 19, on right: 19 25 26 27 28 59
unary_operator (61)
    on left: 20 21 22 23 24, on right: 19
multiplicative_expression (62)
    on left: 25 26 27 28, on right: 26 27 28 29 30 31
additive_expression (63)
    on left: 29 30 31, on right: 30 31 32 33 34
shift_expression (64)
    on left: 32 33 34, on right: 33 34 35 36
and_expression (65)
    on left: 35 36, on right: 36 37 38
exclusive_or_expression (66)
    on left: 37 38, on right: 38 39 40
inclusive_or_expression (67)
    on left: 39 40, on right: 40 41 42 43 44 45
relational_expression (68)
    on left: 41 42 43 44 45, on right: 42 43 44 45 46 47 48
equality_expression (69)
    on left: 46 47 48, on right: 47 48 50 51
and_helper (70)
    on left: 49, on right: 51
logical_and_expression (71)
    on left: 50 51, on right: 49 53 54
or_helper (72)
    on left: 52, on right: 54
logical_or_expression (73)
    on left: 53 54, on right: 52 55 56
condition (74)
    on left: 55, on right: 57
conditional_expression (75)
    on left: 56 57, on right: 57 58
assignment_expression (76)
    on left: 58 59, on right: 16 17 59 60 83
expression (77)
    on left: 60, on right: 9 11 57 96 98 101 102
declaration (78)
    on left: 61, on right: 94 107
init_declarator_list (79)
    on left: 62 63, on right: 61 63
init_declarator (80)
    on left: 64 65, on right: 62 63
type_specifier (81)
    on left: 66 67 68 69 70, on right: 61 82 108
declarator (82)
    on left: 71 72, on right: 64 65 82 108
declarator_helper (83)
    on left: 73, on right: 76
direct_declarator (84)
    on left: 74 75 76, on right: 71 72
pointer (85)
    on left: 77, on right: 71
parameter_list_opt (86)
    on left: 78 79, on right: 76
parameter_list (87)
    on left: 80 81, on right: 78 81
parameter_declaration (88)
    on left: 82, on right: 80 81
initializer (89)
    on left: 83, on right: 65
statement (90)
    on left: 84 85 86 87 88, on right: 95 99 100 101
compound_statement (91)
    on left: 89, on right: 84
block_item_list_opt (92)
    on left: 90 91, on right: 89 108
block_item_list (93)
    on left: 92 93, on right: 91 93
block_item (94)
    on left: 94 95, on right: 92 93
expression_statement (95)
    on left: 96 97, on right: 85 101
if_helper (96)
    on left: 98, on right: 99 100
selection_statement (97)
    on left: 99 100, on right: 86
iteration_statement (98)
    on left: 101, on right: 87
jump_statement (99)
    on left: 102 103, on right: 88
translation_unit (100)
    on left: 104 105, on right: 0 105
external_declaration (101)
    on left: 106 107, on right: 104 105
function_definition (102)
    on left: 108, on right: 106


state 0

    0 $accept: . translation_unit $end

    CHAR     shift, and go to state 1
    FLOAT    shift, and go to state 2
    INTEGER  shift, and go to state 3
    VOID     shift, and go to state 4
    BOOL     shift, and go to state 5

    declaration           go to state 6
    type_specifier        go to state 7
    translation_unit      go to state 8
    external_declaration  go to state 9
    function_definition   go to state 10


state 1

   67 type_specifier: CHAR .

    $default  reduce using rule 67 (type_specifier)


state 2

   69 type_specifier: FLOAT .

    $default  reduce using rule 69 (type_specifier)


state 3

   68 type_specifier: INTEGER .

    $default  reduce using rule 68 (type_specifier)


state 4

   66 type_specifier: VOID .

    $default  reduce using rule 66 (type_specifier)


state 5

   70 type_specifier: BOOL .

    $default  reduce using rule 70 (type_specifier)


state 6

  107 external_declaration: declaration .

    $default  reduce using rule 107 (external_declaration)


state 7

   61 declaration: type_specifier . init_declarator_list SEMICOLON
  108 function_definition: type_specifier . declarator changetable BEGIN_TOK block_item_list_opt END

    IDENTIFIER  shift, and go to state 11
    MUL         shift, and go to state 12

    init_declarator_list  go to state 13
    init_declarator       go to state 14
    declarator            go to state 15
    declarator_helper     go to state 16
    direct_declarator     go to state 17
    pointer               go to state 18


state 8

    0 $accept: translation_unit . $end
  105 translation_unit: translation_unit . external_declaration

    $end     shift, and go to state 19
    CHAR     shift, and go to state 1
    FLOAT    shift, and go to state 2
    INTEGER  shift, and go to state 3
    VOID     shift, and go to state 4
    BOOL     shift, and go to state 5

    declaration           go to state 6
    type_specifier        go to state 7
    external_declaration  go to state 20
    function_definition   go to state 10


state 9

  104 translation_unit: external_declaration .

    $default  reduce using rule 104 (translation_unit)


state 10

  106 external_declaration: function_definition .

    $default  reduce using rule 106 (external_declaration)


state 11

   73 declarator_helper: IDENTIFIER . ROUND_BRACKET_OPEN
   74 direct_declarator: IDENTIFIER .
   75                  | IDENTIFIER . SQUARE_BRACKET_OPEN INTEGER_CONSTANT SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 21
    ROUND_BRACKET_OPEN   shift, and go to state 22

    $default  reduce using rule 74 (direct_declarator)


state 12

   77 pointer: MUL .

    $default  reduce using rule 77 (pointer)


state 13

   61 declaration: type_specifier init_declarator_list . SEMICOLON
   63 init_declarator_list: init_declarator_list . COMMA init_declarator

    SEMICOLON  shift, and go to state 23
    COMMA      shift, and go to state 24


state 14

   62 init_declarator_list: init_declarator .

    $default  reduce using rule 62 (init_declarator_list)


state 15

   64 init_declarator: declarator .
   65                | declarator . ASSIGN initializer
  108 function_definition: type_specifier declarator . changetable BEGIN_TOK block_item_list_opt END

    ASSIGN  shift, and go to state 25

    BEGIN_TOK  reduce using rule 3 (changetable)
    $default   reduce using rule 64 (init_declarator)

    changetable  go to state 26


state 16

   76 direct_declarator: declarator_helper . changetable parameter_list_opt ROUND_BRACKET_CLOSE

    $default  reduce using rule 3 (changetable)

    changetable  go to state 27


state 17

   72 declarator: direct_declarator .

    $default  reduce using rule 72 (declarator)


state 18

   71 declarator: pointer . direct_declarator

    IDENTIFIER  shift, and go to state 11

    declarator_helper  go to state 16
    direct_declarator  go to state 28


state 19

    0 $accept: translation_unit $end .

    $default  accept


state 20

  105 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 105 (translation_unit)


state 21

   75 direct_declarator: IDENTIFIER SQUARE_BRACKET_OPEN . INTEGER_CONSTANT SQUARE_BRACKET_CLOSE

    INTEGER_CONSTANT  shift, and go to state 29


state 22

   73 declarator_helper: IDENTIFIER ROUND_BRACKET_OPEN .

    $default  reduce using rule 73 (declarator_helper)


state 23

   61 declaration: type_specifier init_declarator_list SEMICOLON .

    $default  reduce using rule 61 (declaration)


state 24

   63 init_declarator_list: init_declarator_list COMMA . init_declarator

    IDENTIFIER  shift, and go to state 11
    MUL         shift, and go to state 12

    init_declarator    go to state 30
    declarator         go to state 31
    declarator_helper  go to state 16
    direct_declarator  go to state 17
    pointer            go to state 18


state 25

   65 init_declarator: declarator ASSIGN . initializer

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 61
    initializer                go to state 62


state 26

  108 function_definition: type_specifier declarator changetable . BEGIN_TOK block_item_list_opt END

    BEGIN_TOK  shift, and go to state 63


state 27

   76 direct_declarator: declarator_helper changetable . parameter_list_opt ROUND_BRACKET_CLOSE

    CHAR     shift, and go to state 1
    FLOAT    shift, and go to state 2
    INTEGER  shift, and go to state 3
    VOID     shift, and go to state 4
    BOOL     shift, and go to state 5

    $default  reduce using rule 79 (parameter_list_opt)

    type_specifier         go to state 64
    parameter_list_opt     go to state 65
    parameter_list         go to state 66
    parameter_declaration  go to state 67


state 28

   71 declarator: pointer direct_declarator .

    $default  reduce using rule 71 (declarator)


state 29

   75 direct_declarator: IDENTIFIER SQUARE_BRACKET_OPEN INTEGER_CONSTANT . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 68


state 30

   63 init_declarator_list: init_declarator_list COMMA init_declarator .

    $default  reduce using rule 63 (init_declarator_list)


state 31

   64 init_declarator: declarator .
   65                | declarator . ASSIGN initializer

    ASSIGN  shift, and go to state 25

    $default  reduce using rule 64 (init_declarator)


state 32

    4 primary_expression: IDENTIFIER .

    $default  reduce using rule 4 (primary_expression)


state 33

    8 primary_expression: STRING_LITERAL .

    $default  reduce using rule 8 (primary_expression)


state 34

    9 primary_expression: ROUND_BRACKET_OPEN . expression ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 70


state 35

   20 unary_operator: BITWISE_AND .

    $default  reduce using rule 20 (unary_operator)


state 36

   21 unary_operator: MUL .

    $default  reduce using rule 21 (unary_operator)


state 37

   22 unary_operator: ADD .

    $default  reduce using rule 22 (unary_operator)


state 38

   23 unary_operator: SUB .

    $default  reduce using rule 23 (unary_operator)


state 39

   24 unary_operator: EXCLAIM .

    $default  reduce using rule 24 (unary_operator)


state 40

    7 primary_expression: FLOAT_CONSTANT .

    $default  reduce using rule 7 (primary_expression)


state 41

    5 primary_expression: INTEGER_CONSTANT .

    $default  reduce using rule 5 (primary_expression)


state 42

    6 primary_expression: CHARACTER_CONSTANT .

    $default  reduce using rule 6 (primary_expression)


state 43

   10 postfix_expression: primary_expression .

    $default  reduce using rule 10 (postfix_expression)


state 44

   11 postfix_expression: postfix_expression . SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE
   12                   | postfix_expression . ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE
   13                   | postfix_expression . ARROW IDENTIFIER
   18 unary_expression: postfix_expression .

    SQUARE_BRACKET_OPEN  shift, and go to state 71
    ROUND_BRACKET_OPEN   shift, and go to state 72
    ARROW                shift, and go to state 73

    $default  reduce using rule 18 (unary_expression)


state 45

   25 multiplicative_expression: unary_expression .
   59 assignment_expression: unary_expression . ASSIGN assignment_expression

    ASSIGN  shift, and go to state 74

    $default  reduce using rule 25 (multiplicative_expression)


state 46

   19 unary_expression: unary_operator . unary_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression  go to state 43
    postfix_expression  go to state 44
    unary_expression    go to state 75
    unary_operator      go to state 46


state 47

   26 multiplicative_expression: multiplicative_expression . MUL unary_expression
   27                          | multiplicative_expression . DIV unary_expression
   28                          | multiplicative_expression . MOD unary_expression
   29 additive_expression: multiplicative_expression .

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    MOD  shift, and go to state 78

    $default  reduce using rule 29 (additive_expression)


state 48

   30 additive_expression: additive_expression . ADD multiplicative_expression
   31                    | additive_expression . SUB multiplicative_expression
   32 shift_expression: additive_expression .

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 32 (shift_expression)


state 49

   33 shift_expression: shift_expression . BIT_SL additive_expression
   34                 | shift_expression . BIT_SR additive_expression
   35 and_expression: shift_expression .

    BIT_SL  shift, and go to state 81
    BIT_SR  shift, and go to state 82

    $default  reduce using rule 35 (and_expression)


state 50

   36 and_expression: and_expression . BITWISE_AND shift_expression
   37 exclusive_or_expression: and_expression .

    BITWISE_AND  shift, and go to state 83

    $default  reduce using rule 37 (exclusive_or_expression)


state 51

   38 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   39 inclusive_or_expression: exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 84

    $default  reduce using rule 39 (inclusive_or_expression)


state 52

   40 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   41 relational_expression: inclusive_or_expression .

    BITWISE_OR  shift, and go to state 85

    $default  reduce using rule 41 (relational_expression)


state 53

   42 relational_expression: relational_expression . LT inclusive_or_expression
   43                      | relational_expression . GT inclusive_or_expression
   44                      | relational_expression . LTE inclusive_or_expression
   45                      | relational_expression . GTE inclusive_or_expression
   46 equality_expression: relational_expression .

    LTE  shift, and go to state 86
    GTE  shift, and go to state 87
    LT   shift, and go to state 88
    GT   shift, and go to state 89

    $default  reduce using rule 46 (equality_expression)


state 54

   47 equality_expression: equality_expression . EQ M relational_expression
   48                    | equality_expression . NEQ M relational_expression
   50 logical_and_expression: equality_expression .

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91

    $default  reduce using rule 50 (logical_and_expression)


state 55

   51 logical_and_expression: and_helper . M equality_expression

    $default  reduce using rule 1 (M)

    M  go to state 92


state 56

   49 and_helper: logical_and_expression . AND
   53 logical_or_expression: logical_and_expression .

    AND  shift, and go to state 93

    $default  reduce using rule 53 (logical_or_expression)


state 57

   54 logical_or_expression: or_helper . M logical_and_expression

    $default  reduce using rule 1 (M)

    M  go to state 94


state 58

   52 or_helper: logical_or_expression . OR
   55 condition: logical_or_expression . QUESTION
   56 conditional_expression: logical_or_expression .

    OR        shift, and go to state 95
    QUESTION  shift, and go to state 96

    $default  reduce using rule 56 (conditional_expression)


state 59

   57 conditional_expression: condition . M expression N COLON M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 97


state 60

   58 assignment_expression: conditional_expression .

    $default  reduce using rule 58 (assignment_expression)


state 61

   83 initializer: assignment_expression .

    $default  reduce using rule 83 (initializer)


state 62

   65 init_declarator: declarator ASSIGN initializer .

    $default  reduce using rule 65 (init_declarator)


state 63

  108 function_definition: type_specifier declarator changetable BEGIN_TOK . block_item_list_opt END

    CHAR                shift, and go to state 1
    FOR                 shift, and go to state 98
    FLOAT               shift, and go to state 2
    IF                  shift, and go to state 99
    INTEGER             shift, and go to state 3
    RETURN              shift, and go to state 100
    VOID                shift, and go to state 4
    BOOL                shift, and go to state 5
    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BEGIN_TOK           shift, and go to state 101
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    SEMICOLON           shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    $default  reduce using rule 90 (block_item_list_opt)

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 103
    declaration                go to state 104
    type_specifier             go to state 105
    statement                  go to state 106
    compound_statement         go to state 107
    block_item_list_opt        go to state 108
    block_item_list            go to state 109
    block_item                 go to state 110
    expression_statement       go to state 111
    if_helper                  go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    jump_statement             go to state 115


state 64

   82 parameter_declaration: type_specifier . declarator

    IDENTIFIER  shift, and go to state 11
    MUL         shift, and go to state 12

    declarator         go to state 116
    declarator_helper  go to state 16
    direct_declarator  go to state 17
    pointer            go to state 18


state 65

   76 direct_declarator: declarator_helper changetable parameter_list_opt . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 117


state 66

   78 parameter_list_opt: parameter_list .
   81 parameter_list: parameter_list . COMMA parameter_declaration

    COMMA  shift, and go to state 118

    $default  reduce using rule 78 (parameter_list_opt)


state 67

   80 parameter_list: parameter_declaration .

    $default  reduce using rule 80 (parameter_list)


state 68

   75 direct_declarator: IDENTIFIER SQUARE_BRACKET_OPEN INTEGER_CONSTANT SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 75 (direct_declarator)


state 69

   60 expression: assignment_expression .

    $default  reduce using rule 60 (expression)


state 70

    9 primary_expression: ROUND_BRACKET_OPEN expression . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 119


state 71

   11 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN . expression SQUARE_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 120


state 72

   12 postfix_expression: postfix_expression ROUND_BRACKET_OPEN . argument_expression_list_opt ROUND_BRACKET_CLOSE

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    $default  reduce using rule 15 (argument_expression_list_opt)

    primary_expression            go to state 43
    postfix_expression            go to state 44
    argument_expression_list_opt  go to state 121
    argument_expression_list      go to state 122
    unary_expression              go to state 45
    unary_operator                go to state 46
    multiplicative_expression     go to state 47
    additive_expression           go to state 48
    shift_expression              go to state 49
    and_expression                go to state 50
    exclusive_or_expression       go to state 51
    inclusive_or_expression       go to state 52
    relational_expression         go to state 53
    equality_expression           go to state 54
    and_helper                    go to state 55
    logical_and_expression        go to state 56
    or_helper                     go to state 57
    logical_or_expression         go to state 58
    condition                     go to state 59
    conditional_expression        go to state 60
    assignment_expression         go to state 123


state 73

   13 postfix_expression: postfix_expression ARROW . IDENTIFIER

    IDENTIFIER  shift, and go to state 124


state 74

   59 assignment_expression: unary_expression ASSIGN . assignment_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 125


state 75

   19 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 19 (unary_expression)


state 76

   26 multiplicative_expression: multiplicative_expression MUL . unary_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression  go to state 43
    postfix_expression  go to state 44
    unary_expression    go to state 126
    unary_operator      go to state 46


state 77

   27 multiplicative_expression: multiplicative_expression DIV . unary_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression  go to state 43
    postfix_expression  go to state 44
    unary_expression    go to state 127
    unary_operator      go to state 46


state 78

   28 multiplicative_expression: multiplicative_expression MOD . unary_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression  go to state 43
    postfix_expression  go to state 44
    unary_expression    go to state 128
    unary_operator      go to state 46


state 79

   30 additive_expression: additive_expression ADD . multiplicative_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 130


state 80

   31 additive_expression: additive_expression SUB . multiplicative_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 131


state 81

   33 shift_expression: shift_expression BIT_SL . additive_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 132


state 82

   34 shift_expression: shift_expression BIT_SR . additive_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 133


state 83

   36 and_expression: and_expression BITWISE_AND . shift_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 134


state 84

   38 exclusive_or_expression: exclusive_or_expression BITWISE_XOR . and_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 135


state 85

   40 inclusive_or_expression: inclusive_or_expression BITWISE_OR . exclusive_or_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 136


state 86

   44 relational_expression: relational_expression LTE . inclusive_or_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 137


state 87

   45 relational_expression: relational_expression GTE . inclusive_or_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 138


state 88

   42 relational_expression: relational_expression LT . inclusive_or_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 139


state 89

   43 relational_expression: relational_expression GT . inclusive_or_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 140


state 90

   47 equality_expression: equality_expression EQ . M relational_expression

    $default  reduce using rule 1 (M)

    M  go to state 141


state 91

   48 equality_expression: equality_expression NEQ . M relational_expression

    $default  reduce using rule 1 (M)

    M  go to state 142


state 92

   51 logical_and_expression: and_helper M . equality_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 143


state 93

   49 and_helper: logical_and_expression AND .

    $default  reduce using rule 49 (and_helper)


state 94

   54 logical_or_expression: or_helper M . logical_and_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 144


state 95

   52 or_helper: logical_or_expression OR .

    $default  reduce using rule 52 (or_helper)


state 96

   55 condition: logical_or_expression QUESTION .

    $default  reduce using rule 55 (condition)


state 97

   57 conditional_expression: condition M . expression N COLON M conditional_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 145


state 98

  101 iteration_statement: FOR . ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_OPEN  shift, and go to state 146


state 99

   98 if_helper: IF . ROUND_BRACKET_OPEN expression

    ROUND_BRACKET_OPEN  shift, and go to state 147


state 100

  102 jump_statement: RETURN . expression SEMICOLON
  103               | RETURN . SEMICOLON

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    SEMICOLON           shift, and go to state 148
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 149


state 101

   89 compound_statement: BEGIN_TOK . block_item_list_opt END

    CHAR                shift, and go to state 1
    FOR                 shift, and go to state 98
    FLOAT               shift, and go to state 2
    IF                  shift, and go to state 99
    INTEGER             shift, and go to state 3
    RETURN              shift, and go to state 100
    VOID                shift, and go to state 4
    BOOL                shift, and go to state 5
    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BEGIN_TOK           shift, and go to state 101
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    SEMICOLON           shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    $default  reduce using rule 90 (block_item_list_opt)

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 103
    declaration                go to state 104
    type_specifier             go to state 105
    statement                  go to state 106
    compound_statement         go to state 107
    block_item_list_opt        go to state 150
    block_item_list            go to state 109
    block_item                 go to state 110
    expression_statement       go to state 111
    if_helper                  go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    jump_statement             go to state 115


state 102

   97 expression_statement: SEMICOLON .

    $default  reduce using rule 97 (expression_statement)


state 103

   96 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 151


state 104

   94 block_item: declaration .

    $default  reduce using rule 94 (block_item)


state 105

   61 declaration: type_specifier . init_declarator_list SEMICOLON

    IDENTIFIER  shift, and go to state 11
    MUL         shift, and go to state 12

    init_declarator_list  go to state 13
    init_declarator       go to state 14
    declarator            go to state 31
    declarator_helper     go to state 16
    direct_declarator     go to state 17
    pointer               go to state 18


state 106

   95 block_item: statement .

    $default  reduce using rule 95 (block_item)


state 107

   84 statement: compound_statement .

    $default  reduce using rule 84 (statement)


state 108

  108 function_definition: type_specifier declarator changetable BEGIN_TOK block_item_list_opt . END

    END  shift, and go to state 152


state 109

   91 block_item_list_opt: block_item_list .
   93 block_item_list: block_item_list . M block_item

    END       reduce using rule 91 (block_item_list_opt)
    $default  reduce using rule 1 (M)

    M  go to state 153


state 110

   92 block_item_list: block_item .

    $default  reduce using rule 92 (block_item_list)


state 111

   85 statement: expression_statement .

    $default  reduce using rule 85 (statement)


state 112

   99 selection_statement: if_helper . ROUND_BRACKET_CLOSE M statement
  100                    | if_helper . ROUND_BRACKET_CLOSE M statement ELSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 154


state 113

   86 statement: selection_statement .

    $default  reduce using rule 86 (statement)


state 114

   87 statement: iteration_statement .

    $default  reduce using rule 87 (statement)


state 115

   88 statement: jump_statement .

    $default  reduce using rule 88 (statement)


state 116

   82 parameter_declaration: type_specifier declarator .

    $default  reduce using rule 82 (parameter_declaration)


state 117

   76 direct_declarator: declarator_helper changetable parameter_list_opt ROUND_BRACKET_CLOSE .

    $default  reduce using rule 76 (direct_declarator)


state 118

   81 parameter_list: parameter_list COMMA . parameter_declaration

    CHAR     shift, and go to state 1
    FLOAT    shift, and go to state 2
    INTEGER  shift, and go to state 3
    VOID     shift, and go to state 4
    BOOL     shift, and go to state 5

    type_specifier         go to state 64
    parameter_declaration  go to state 155


state 119

    9 primary_expression: ROUND_BRACKET_OPEN expression ROUND_BRACKET_CLOSE .

    $default  reduce using rule 9 (primary_expression)


state 120

   11 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 156


state 121

   12 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt . ROUND_BRACKET_CLOSE

    ROUND_BRACKET_CLOSE  shift, and go to state 157


state 122

   14 argument_expression_list_opt: argument_expression_list .
   17 argument_expression_list: argument_expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 158

    $default  reduce using rule 14 (argument_expression_list_opt)


state 123

   16 argument_expression_list: assignment_expression .

    $default  reduce using rule 16 (argument_expression_list)


state 124

   13 postfix_expression: postfix_expression ARROW IDENTIFIER .

    $default  reduce using rule 13 (postfix_expression)


state 125

   59 assignment_expression: unary_expression ASSIGN assignment_expression .

    $default  reduce using rule 59 (assignment_expression)


state 126

   26 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 26 (multiplicative_expression)


state 127

   27 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 27 (multiplicative_expression)


state 128

   28 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 28 (multiplicative_expression)


state 129

   25 multiplicative_expression: unary_expression .

    $default  reduce using rule 25 (multiplicative_expression)


state 130

   26 multiplicative_expression: multiplicative_expression . MUL unary_expression
   27                          | multiplicative_expression . DIV unary_expression
   28                          | multiplicative_expression . MOD unary_expression
   30 additive_expression: additive_expression ADD multiplicative_expression .

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    MOD  shift, and go to state 78

    $default  reduce using rule 30 (additive_expression)


state 131

   26 multiplicative_expression: multiplicative_expression . MUL unary_expression
   27                          | multiplicative_expression . DIV unary_expression
   28                          | multiplicative_expression . MOD unary_expression
   31 additive_expression: additive_expression SUB multiplicative_expression .

    MUL  shift, and go to state 76
    DIV  shift, and go to state 77
    MOD  shift, and go to state 78

    $default  reduce using rule 31 (additive_expression)


state 132

   30 additive_expression: additive_expression . ADD multiplicative_expression
   31                    | additive_expression . SUB multiplicative_expression
   33 shift_expression: shift_expression BIT_SL additive_expression .

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 33 (shift_expression)


state 133

   30 additive_expression: additive_expression . ADD multiplicative_expression
   31                    | additive_expression . SUB multiplicative_expression
   34 shift_expression: shift_expression BIT_SR additive_expression .

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 34 (shift_expression)


state 134

   33 shift_expression: shift_expression . BIT_SL additive_expression
   34                 | shift_expression . BIT_SR additive_expression
   36 and_expression: and_expression BITWISE_AND shift_expression .

    BIT_SL  shift, and go to state 81
    BIT_SR  shift, and go to state 82

    $default  reduce using rule 36 (and_expression)


state 135

   36 and_expression: and_expression . BITWISE_AND shift_expression
   38 exclusive_or_expression: exclusive_or_expression BITWISE_XOR and_expression .

    BITWISE_AND  shift, and go to state 83

    $default  reduce using rule 38 (exclusive_or_expression)


state 136

   38 exclusive_or_expression: exclusive_or_expression . BITWISE_XOR and_expression
   40 inclusive_or_expression: inclusive_or_expression BITWISE_OR exclusive_or_expression .

    BITWISE_XOR  shift, and go to state 84

    $default  reduce using rule 40 (inclusive_or_expression)


state 137

   40 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   44 relational_expression: relational_expression LTE inclusive_or_expression .

    BITWISE_OR  shift, and go to state 85

    $default  reduce using rule 44 (relational_expression)


state 138

   40 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   45 relational_expression: relational_expression GTE inclusive_or_expression .

    BITWISE_OR  shift, and go to state 85

    $default  reduce using rule 45 (relational_expression)


state 139

   40 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   42 relational_expression: relational_expression LT inclusive_or_expression .

    BITWISE_OR  shift, and go to state 85

    $default  reduce using rule 42 (relational_expression)


state 140

   40 inclusive_or_expression: inclusive_or_expression . BITWISE_OR exclusive_or_expression
   43 relational_expression: relational_expression GT inclusive_or_expression .

    BITWISE_OR  shift, and go to state 85

    $default  reduce using rule 43 (relational_expression)


state 141

   47 equality_expression: equality_expression EQ M . relational_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 159


state 142

   48 equality_expression: equality_expression NEQ M . relational_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 160


state 143

   47 equality_expression: equality_expression . EQ M relational_expression
   48                    | equality_expression . NEQ M relational_expression
   51 logical_and_expression: and_helper M equality_expression .

    EQ   shift, and go to state 90
    NEQ  shift, and go to state 91

    $default  reduce using rule 51 (logical_and_expression)


state 144

   49 and_helper: logical_and_expression . AND
   54 logical_or_expression: or_helper M logical_and_expression .

    AND  shift, and go to state 93

    $default  reduce using rule 54 (logical_or_expression)


state 145

   57 conditional_expression: condition M expression . N COLON M conditional_expression

    $default  reduce using rule 2 (N)

    N  go to state 161


state 146

  101 iteration_statement: FOR ROUND_BRACKET_OPEN . expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    SEMICOLON           shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 103
    expression_statement       go to state 162


state 147

   98 if_helper: IF ROUND_BRACKET_OPEN . expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 163


state 148

  103 jump_statement: RETURN SEMICOLON .

    $default  reduce using rule 103 (jump_statement)


state 149

  102 jump_statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 164


state 150

   89 compound_statement: BEGIN_TOK block_item_list_opt . END

    END  shift, and go to state 165


state 151

   96 expression_statement: expression SEMICOLON .

    $default  reduce using rule 96 (expression_statement)


state 152

  108 function_definition: type_specifier declarator changetable BEGIN_TOK block_item_list_opt END .

    $default  reduce using rule 108 (function_definition)


state 153

   93 block_item_list: block_item_list M . block_item

    CHAR                shift, and go to state 1
    FOR                 shift, and go to state 98
    FLOAT               shift, and go to state 2
    IF                  shift, and go to state 99
    INTEGER             shift, and go to state 3
    RETURN              shift, and go to state 100
    VOID                shift, and go to state 4
    BOOL                shift, and go to state 5
    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BEGIN_TOK           shift, and go to state 101
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    SEMICOLON           shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 103
    declaration                go to state 104
    type_specifier             go to state 105
    statement                  go to state 106
    compound_statement         go to state 107
    block_item                 go to state 166
    expression_statement       go to state 111
    if_helper                  go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    jump_statement             go to state 115


state 154

   99 selection_statement: if_helper ROUND_BRACKET_CLOSE . M statement
  100                    | if_helper ROUND_BRACKET_CLOSE . M statement ELSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 167


state 155

   81 parameter_list: parameter_list COMMA parameter_declaration .

    $default  reduce using rule 81 (parameter_list)


state 156

   11 postfix_expression: postfix_expression SQUARE_BRACKET_OPEN expression SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 11 (postfix_expression)


state 157

   12 postfix_expression: postfix_expression ROUND_BRACKET_OPEN argument_expression_list_opt ROUND_BRACKET_CLOSE .

    $default  reduce using rule 12 (postfix_expression)


state 158

   17 argument_expression_list: argument_expression_list COMMA . assignment_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 168


state 159

   42 relational_expression: relational_expression . LT inclusive_or_expression
   43                      | relational_expression . GT inclusive_or_expression
   44                      | relational_expression . LTE inclusive_or_expression
   45                      | relational_expression . GTE inclusive_or_expression
   47 equality_expression: equality_expression EQ M relational_expression .

    LTE  shift, and go to state 86
    GTE  shift, and go to state 87
    LT   shift, and go to state 88
    GT   shift, and go to state 89

    $default  reduce using rule 47 (equality_expression)


state 160

   42 relational_expression: relational_expression . LT inclusive_or_expression
   43                      | relational_expression . GT inclusive_or_expression
   44                      | relational_expression . LTE inclusive_or_expression
   45                      | relational_expression . GTE inclusive_or_expression
   48 equality_expression: equality_expression NEQ M relational_expression .

    LTE  shift, and go to state 86
    GTE  shift, and go to state 87
    LT   shift, and go to state 88
    GT   shift, and go to state 89

    $default  reduce using rule 48 (equality_expression)


state 161

   57 conditional_expression: condition M expression N . COLON M conditional_expression

    COLON  shift, and go to state 169


state 162

  101 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement . M expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 170


state 163

   98 if_helper: IF ROUND_BRACKET_OPEN expression .

    $default  reduce using rule 98 (if_helper)


state 164

  102 jump_statement: RETURN expression SEMICOLON .

    $default  reduce using rule 102 (jump_statement)


state 165

   89 compound_statement: BEGIN_TOK block_item_list_opt END .

    $default  reduce using rule 89 (compound_statement)


state 166

   93 block_item_list: block_item_list M block_item .

    $default  reduce using rule 93 (block_item_list)


state 167

   99 selection_statement: if_helper ROUND_BRACKET_CLOSE M . statement
  100                    | if_helper ROUND_BRACKET_CLOSE M . statement ELSE M statement

    FOR                 shift, and go to state 98
    IF                  shift, and go to state 99
    RETURN              shift, and go to state 100
    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BEGIN_TOK           shift, and go to state 101
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    SEMICOLON           shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 103
    statement                  go to state 171
    compound_statement         go to state 107
    expression_statement       go to state 111
    if_helper                  go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    jump_statement             go to state 115


state 168

   17 argument_expression_list: argument_expression_list COMMA assignment_expression .

    $default  reduce using rule 17 (argument_expression_list)


state 169

   57 conditional_expression: condition M expression N COLON . M conditional_expression

    $default  reduce using rule 1 (M)

    M  go to state 172


state 170

  101 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M . expression_statement M expression N ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    SEMICOLON           shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 103
    expression_statement       go to state 173


state 171

   99 selection_statement: if_helper ROUND_BRACKET_CLOSE M statement .
  100                    | if_helper ROUND_BRACKET_CLOSE M statement . ELSE M statement

    ELSE  shift, and go to state 174

    $default  reduce using rule 99 (selection_statement)


state 172

   57 conditional_expression: condition M expression N COLON M . conditional_expression

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 129
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 175


state 173

  101 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement . M expression N ROUND_BRACKET_CLOSE M statement

    $default  reduce using rule 1 (M)

    M  go to state 176


state 174

  100 selection_statement: if_helper ROUND_BRACKET_CLOSE M statement ELSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 177


state 175

   57 conditional_expression: condition M expression N COLON M conditional_expression .

    $default  reduce using rule 57 (conditional_expression)


state 176

  101 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M . expression N ROUND_BRACKET_CLOSE M statement

    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 178


state 177

  100 selection_statement: if_helper ROUND_BRACKET_CLOSE M statement ELSE M . statement

    FOR                 shift, and go to state 98
    IF                  shift, and go to state 99
    RETURN              shift, and go to state 100
    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BEGIN_TOK           shift, and go to state 101
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    SEMICOLON           shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 103
    statement                  go to state 179
    compound_statement         go to state 107
    expression_statement       go to state 111
    if_helper                  go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    jump_statement             go to state 115


state 178

  101 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression . N ROUND_BRACKET_CLOSE M statement

    $default  reduce using rule 2 (N)

    N  go to state 180


state 179

  100 selection_statement: if_helper ROUND_BRACKET_CLOSE M statement ELSE M statement .

    $default  reduce using rule 100 (selection_statement)


state 180

  101 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N . ROUND_BRACKET_CLOSE M statement

    ROUND_BRACKET_CLOSE  shift, and go to state 181


state 181

  101 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE . M statement

    $default  reduce using rule 1 (M)

    M  go to state 182


state 182

  101 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M . statement

    FOR                 shift, and go to state 98
    IF                  shift, and go to state 99
    RETURN              shift, and go to state 100
    IDENTIFIER          shift, and go to state 32
    STRING_LITERAL      shift, and go to state 33
    ROUND_BRACKET_OPEN  shift, and go to state 34
    BEGIN_TOK           shift, and go to state 101
    BITWISE_AND         shift, and go to state 35
    MUL                 shift, and go to state 36
    ADD                 shift, and go to state 37
    SUB                 shift, and go to state 38
    EXCLAIM             shift, and go to state 39
    SEMICOLON           shift, and go to state 102
    FLOAT_CONSTANT      shift, and go to state 40
    INTEGER_CONSTANT    shift, and go to state 41
    CHARACTER_CONSTANT  shift, and go to state 42

    primary_expression         go to state 43
    postfix_expression         go to state 44
    unary_expression           go to state 45
    unary_operator             go to state 46
    multiplicative_expression  go to state 47
    additive_expression        go to state 48
    shift_expression           go to state 49
    and_expression             go to state 50
    exclusive_or_expression    go to state 51
    inclusive_or_expression    go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_helper                 go to state 55
    logical_and_expression     go to state 56
    or_helper                  go to state 57
    logical_or_expression      go to state 58
    condition                  go to state 59
    conditional_expression     go to state 60
    assignment_expression      go to state 69
    expression                 go to state 103
    statement                  go to state 183
    compound_statement         go to state 107
    expression_statement       go to state 111
    if_helper                  go to state 112
    selection_statement        go to state 113
    iteration_statement        go to state 114
    jump_statement             go to state 115


state 183

  101 iteration_statement: FOR ROUND_BRACKET_OPEN expression_statement M expression_statement M expression N ROUND_BRACKET_CLOSE M statement .

    $default  reduce using rule 101 (iteration_statement)
